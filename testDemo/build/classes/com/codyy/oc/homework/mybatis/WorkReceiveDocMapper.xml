<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.codyy.oc.homework.dao.WorkReceiveDocMapper" >
  <resultMap id="BaseResultMap" type="com.codyy.oc.homework.entity.WorkReceiveDoc" >
    <id column="WORK_DOC_ID" property="workDocId" jdbcType="VARCHAR" />
    <result column="WORK_RECEIVE_STU_ID" property="workReceiveStuId" jdbcType="VARCHAR" />
    <result column="DOC_NAME" property="docName" jdbcType="VARCHAR" />
    <result column="DOC_PATH" property="docPath" jdbcType="VARCHAR" />
    <result column="DOC_SIZE" property="docSize" jdbcType="DECIMAL" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    WORK_DOC_ID, WORK_RECEIVE_STU_ID, DOC_NAME, DOC_PATH, DOC_SIZE, CREATE_TIME
  </sql>
  
  <select id="selectByReceiveStu" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from WORK_RECEIVE_DOC
    where WORK_RECEIVE_STU_ID = #{workReceiveStuId,jdbcType=VARCHAR}
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from WORK_RECEIVE_DOC
    where WORK_DOC_ID = #{workDocId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from WORK_RECEIVE_DOC
    where WORK_DOC_ID = #{workDocId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.codyy.oc.homework.entity.WorkReceiveDoc" >
    insert into WORK_RECEIVE_DOC (WORK_DOC_ID, WORK_RECEIVE_STU_ID, DOC_NAME, 
      DOC_PATH, DOC_SIZE, CREATE_TIME
      )
    values (#{workDocId,jdbcType=VARCHAR}, #{workReceiveStuId,jdbcType=VARCHAR}, #{docName,jdbcType=VARCHAR}, 
      #{docPath,jdbcType=VARCHAR}, #{docSize,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.codyy.oc.homework.entity.WorkReceiveDoc" >
    insert into WORK_RECEIVE_DOC
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="workDocId != null" >
        WORK_DOC_ID,
      </if>
      <if test="workReceiveStuId != null" >
        WORK_RECEIVE_STU_ID,
      </if>
      <if test="docName != null" >
        DOC_NAME,
      </if>
      <if test="docPath != null" >
        DOC_PATH,
      </if>
      <if test="docSize != null" >
        DOC_SIZE,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="workDocId != null" >
        #{workDocId,jdbcType=VARCHAR},
      </if>
      <if test="workReceiveStuId != null" >
        #{workReceiveStuId,jdbcType=VARCHAR},
      </if>
      <if test="docName != null" >
        #{docName,jdbcType=VARCHAR},
      </if>
      <if test="docPath != null" >
        #{docPath,jdbcType=VARCHAR},
      </if>
      <if test="docSize != null" >
        #{docSize,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.codyy.oc.homework.entity.WorkReceiveDoc" >
    update WORK_RECEIVE_DOC
    <set >
      <if test="workReceiveStuId != null" >
        WORK_RECEIVE_STU_ID = #{workReceiveStuId,jdbcType=VARCHAR},
      </if>
      <if test="docName != null" >
        DOC_NAME = #{docName,jdbcType=VARCHAR},
      </if>
      <if test="docPath != null" >
        DOC_PATH = #{docPath,jdbcType=VARCHAR},
      </if>
      <if test="docSize != null" >
        DOC_SIZE = #{docSize,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where WORK_DOC_ID = #{workDocId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.codyy.oc.homework.entity.WorkReceiveDoc" >
    update WORK_RECEIVE_DOC
    set WORK_RECEIVE_STU_ID = #{workReceiveStuId,jdbcType=VARCHAR},
      DOC_NAME = #{docName,jdbcType=VARCHAR},
      DOC_PATH = #{docPath,jdbcType=VARCHAR},
      DOC_SIZE = #{docSize,jdbcType=DECIMAL},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
    where WORK_DOC_ID = #{workDocId,jdbcType=VARCHAR}
  </update>
  
<select id="findWorkReceiveDoc" parameterType="java.util.Map" resultMap="BaseResultMap">
  select  wrd.work_receive_stu_id,wrd.work_doc_id,wrd.doc_name,wrd.doc_path,wrd.doc_size,wrd.create_time
from work_receive_doc wrd join
(select wrs.work_receive_stu_id
from work_receive_stu  wrs where wrs.base_user_id=#{userId} and wrs.work_homework_id=#{workId}) a 
on wrd.work_receive_stu_id=a.work_receive_stu_id order by wrd.create_time
  </select>
  <select id="findParentWorkReceiveDoc" parameterType="java.util.Map" resultMap="BaseResultMap">
  select  wrd.work_receive_stu_id,wrd.work_doc_id,wrd.doc_name,wrd.doc_path,wrd.doc_size,wrd.create_time
from work_receive_doc wrd join
(select wrs.work_receive_stu_id
from work_receive_stu  wrs where wrs.base_user_id=(select bsrp.student_user_id
          from base_student_r_parent bsrp
         where bsrp.parent_user_id = #{userId}) and wrs.work_homework_id=#{workId}) a 
on wrd.work_receive_stu_id=a.work_receive_stu_id order by wrd.create_time
  </select>
</mapper>